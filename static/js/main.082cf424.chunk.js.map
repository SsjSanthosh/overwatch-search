{"version":3,"sources":["logo.svg","components/Search/Search.jsx","redux/search/search-actions.js","components/Profile/profilehelper.js","components/Profile/Profile.jsx","App.js","serviceWorker.js","redux/search/search-reducer.js","redux/root-reducer.js","redux/store.js","index.js"],"names":["module","exports","connect","state","search","dispatch","handleSearchChange","item","type","payload","handleSearchSubmit","className","onSubmit","e","preventDefault","selectedPlatform","document","getElementById","platform","options","selectedIndex","value","selectedRegion","region","tag","handleSubmit","name","onChange","target","id","placeholder","getProfile","a","oversmash","playerStats","then","player","console","log","useState","profile","useEffect","data","App","Boolean","window","location","hostname","match","INITIAL_STATE","searchReducer","action","rootReducer","combineReducers","store","createStore","applyMiddleware","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.082cf424.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import React from \"react\";\r\nimport \"./Search.scss\";\r\nimport {\r\n  handleSearchChange,\r\n  handleSearchSubmit\r\n} from \"../../redux/search/search-actions\";\r\nimport { connect } from \"react-redux\";\r\nfunction Search({ search, handleSearchChange, handleSearchSubmit }) {\r\n  const handleChange = e => {\r\n    handleSearchChange(e.target.value);\r\n  };\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    let selectedPlatform = document.getElementById(\"platform\");\r\n    let platform =\r\n      selectedPlatform.options[selectedPlatform.selectedIndex].value;\r\n    let selectedRegion = document.getElementById(\"region\");\r\n    let region = selectedRegion.options[selectedRegion.selectedIndex].value;\r\n    handleSearchSubmit({ region, platform, tag: search });\r\n  };\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <form className=\"form-group form-inline\" onSubmit={e => handleSubmit(e)}>\r\n        <input\r\n          type=\"text\"\r\n          value={search}\r\n          name=\"player\"\r\n          onChange={handleChange}\r\n          className=\"form-control player-search py-4\"\r\n          id=\"player-search\"\r\n          placeholder=\"Enter a player's profile name and region to search\"\r\n        />\r\n        <select className=\"custom-select mr-3\" id=\"region\">\r\n          <option value=\"us\">US</option>\r\n          <option value=\"eu\">EU</option>\r\n          <option value=\"kr\">Korea</option>\r\n          <option value=\"cn\">Canada</option>\r\n          <option value=\"global\">Global</option>\r\n        </select>\r\n        <select className=\"custom-select \" id=\"platform\">\r\n          <option value=\"pc\">PC</option>\r\n          <option value=\"xbox\">Xbox</option>\r\n          <option value=\"ps4\">PlayStation</option>\r\n        </select>\r\n        <button className=\"btn btn-success btn-lg\">Search</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    search: state.search.search\r\n  };\r\n};\r\nconst mapDispatchToProps = dispatch => ({\r\n  handleSearchChange: item => dispatch(handleSearchChange(item)),\r\n  handleSearchSubmit: item => dispatch(handleSearchSubmit(item))\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);\r\n","export const handleSearchChange = item => {\r\n  return {\r\n    type: \"HANDLE_SEARCH_CHANGE\",\r\n    payload: item\r\n  };\r\n};\r\n\r\nexport const handleSearchSubmit = item => {\r\n  return {\r\n    type: \"HANDLE_SEARCH_SUBMIT\",\r\n    payload: item\r\n  };\r\n};\r\n","import axios from \"axios\";\r\nimport oversmash from \"oversmash\";\r\nexport const getProfile = async (platform, region, tag) => {\r\n  const ow = oversmash();\r\n  ow.playerStats(tag, platform).then(player => console.log(player));\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getProfile } from \"./profilehelper\";\r\nfunction Profile({ search }) {\r\n  let { tag, region, platform } = search;\r\n  const [profile, setProfile] = useState({});\r\n\r\n  useEffect(() => {\r\n    if (tag) {\r\n      getProfile(platform, region, tag).then(data => {\r\n        // let { username, level, games } = data;\r\n        // let isprivate = data.private;\r\n        // let profile = { username, isprivate, games, level };\r\n        // setProfile(profile);\r\n        console.log(\"in effect\");\r\n      });\r\n    }\r\n  }, [tag]);\r\n  console.log(profile);\r\n  return <div className=\"container\">{tag}</div>;\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    search: state.search\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(Profile);\r\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Search from \"./components/Search/Search\";\nimport Profile from \"./components/Profile/Profile\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Search />\n      <Profile />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const INITIAL_STATE = {\r\n  search: \"\",\r\n  platform: \"\",\r\n  region: \"\",\r\n  tag: \"\"\r\n};\r\n\r\nconst searchReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case \"HANDLE_SEARCH_CHANGE\":\r\n      return { search: action.payload };\r\n    case \"HANDLE_SEARCH_SUBMIT\":\r\n      return {\r\n        search: \"\",\r\n        region: action.payload.region,\r\n        platform: action.payload.platform,\r\n        tag: action.payload.tag\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default searchReducer;\r\n","import searchReducer from \"./search/search-reducer\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nconst rootReducer = combineReducers({\r\n  search: searchReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport logger from \"redux-logger\";\r\nimport rootReducer from \"./root-reducer\";\r\n\r\nconst middlewares = [];\r\nif (process.env.NODE_ENV === \"development\") {\r\n  middlewares.push(logger);\r\n}\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(...middlewares));\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}